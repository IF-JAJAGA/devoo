package fr.insaif.jajagaa.view;

import java.awt.Color;
import java.awt.Point;

import javax.swing.JPanel;

import fr.insaif.jajagaa.model.Noeud;

/**
 * Classe Vue qui correspond à un noeud dans le modèle.
 * Cette vue possède plus d'attributs si le noeud est un point de livraison. 
 * @author alicia
 */
public class VueNoeud extends JPanel implements VueElement {
	public static final int RAYON = 20;		//Pour l'instant
    
    /**
     * Référence vers le noeud correspondant dans le package Modele
     */
    private Noeud noeudModele;
    /**
     * Coordonnée X du noeud dans la vue.
     */
    private int vueX;
    /**
     * Coordonnée Y du noeud dans la vue.
     */
    private int vueY;
    /**
     * Ce booléen est vrai si le noeud est un point de livraison.
     */
    private boolean estPointDeLivraison;
    /**
     * Couleur du noeud si c'est un point de livraison. 
     */
    private Color couleur;
    private static int conv;
    
    //TODO : enum si le noeud est un point de livraison
    
    /**
     * Creates new form VueNoeud
     */
    public VueNoeud(Noeud unNoeud, Color couleur) {
    	this.couleur = couleur;
        noeudModele = unNoeud;
        vueX = unNoeud.getX()*conv;
        vueY = unNoeud.getY()*conv;
    }


	public Noeud getNoeudModele() {
		return noeudModele;
	}



	public int getVueX() {
		return vueX;
	}


	public void setVueX(int vueX) {
		this.vueX = vueX;
	}


	public int getVueY() {
		return vueY;
	}


	public void setVueY(int vueY) {
		this.vueY = vueY;
	}


	public Color getCouleur() {
		return couleur;
	}


	public void setCouleur(Color couleur) {
		this.couleur = couleur;
	}


	public boolean clicSurMoi(Point p) {
		//On calcule la distance de p au centre du noeud et on compare au rayon.
		int d = (int) Math.sqrt(
							Math.pow(Math.abs(p.x - (vueX+RAYON/2)),2) +
							Math.pow(Math.abs(p.y - (vueY+RAYON/2)),2)
							);
		System.out.println(p.x + " ; " + (vueX+RAYON/2) + " ; " + p.y + " ; " + (vueY+RAYON/2));
		return d<RAYON;
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
